{"version":3,"sources":["screens/game/settings.svg","screens/game/landing.jsx","actions/quiz.js","screens/game/choiceitem.jsx","screens/game/reset.svg","screens/game/quiz.jsx","screens/game/index.jsx","screens/questionmanager/questionitem.jsx","actions/questions.js","screens/questionmanager/form.jsx","screens/questionmanager/index.jsx","App.js","reportWebVitals.js","reducers/quiz.js","reducers/questions.js","store.js","index.js"],"names":["Landing","props","questions_re","useSelector","state","questions","dispatch","useDispatch","useState","name","setName","disabled","length","className","to","src","SettingsIcon","alt","type","placeholder","onChange","e","target","value","onClick","trim","payload","set_name","ChoiceItem","text","selected","setter_cb","right_answer","show","action_class","Quiz","quiz_re","quiz","current_question","index","submited","setSubmited","setSelected","handle_select","ResetIcon","points","choices","map","c","i","Game","Fragment","QuestionItem","id","delete_question","Form","question","setQuestions","answers","setAnswers","add_new_question","can_dispatch","forEach","a","question_object","uuid","add_question","htmlFor","arr","update_index","checked","QuestionManager","is_empty","q","App","useEffect","path","exact","component","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","quizReducer","action","initial_state","loading","load_questions_from_localstorage","result","localStorage","getItem","JSON","parse","save_questions_to_localstorage","questions_array","string","stringify","setItem","questionsReducer","new_questions","filter","allReducers","combineReducers","store","createStore","ReduxProvider","children","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.634be312.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/settings.c2c79171.svg\";","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { set_name } from '../../actions/quiz';\r\nimport { Link } from 'react-router-dom'\r\nimport SettingsIcon from './settings.svg'\r\n\r\n\r\nfunction Landing(props) {\r\n\r\n    const questions_re = useSelector(state => state.questions);\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState('');\r\n    let disabled = questions_re.questions.length <= 0;\r\n\r\n    const dispatch_name = () => {\r\n        if (name.trim() !== \"\")\r\n            dispatch(set_name(name));\r\n    }\r\n\r\n    return (\r\n        <div className=\"landing-container\">\r\n            <div className=\"landing-hero\">\r\n                <div className=\"navigation\">\r\n                    <Link to=\"/settings\">\r\n                        <img src={SettingsIcon} alt=\"\" />\r\n                        Beállítások\r\n                    </Link>\r\n                </div>\r\n                <div className=\"landing-content\">\r\n                    <h1>A Nagy Quiz App</h1>\r\n                    <p>Teszteld saját és barátaid tudástárát egy izgalmas megmérettetéssel ! Készíts és válaszolj meg nehéz\r\n                    vagy könnyű kérdéseket. A mókának sosincs vége, bármikor új kérdéseket adhatsz meg.</p>\r\n                    <p>Add meg a neved és kezdjünk hozzá !</p>\r\n                    <div className=\"landing-content-action\">\r\n                        <input\r\n                            disabled={disabled}\r\n                            type=\"text\"\r\n                            placeholder=\"Neved:\"\r\n                            onChange={e => setName(e.target.value)} />\r\n                        <button\r\n                            disabled={disabled}\r\n                            onClick={() => dispatch_name()}\r\n                            className=\"btn btn-primary\">Kezdjünk Hozzá &rArr;\r\n                        </button>\r\n                    </div>\r\n                    {disabled ?\r\n                        <div className=\"landing-content-error caption-t\">\r\n                            <b>Figyelem:</b> Addig nem kezdhetsz játszani, amíg nincsenek kérdések!\r\n                            Adj meg új kérdéseket a beállítások menüben vagy kattints ide!\r\n                        </div>\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"landing-illustration\">\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing;\r\n","export const add_point = () =>{\r\n    return {\r\n        type: 'QUIZ_ADD_POINT'\r\n    }\r\n}\r\n\r\nexport const set_name = (name) =>{\r\n    return {\r\n        type: 'QUIZ_SET_NAME',\r\n        payload: name\r\n    }\r\n}\r\n\r\nexport const reset_game = () =>{\r\n    return {\r\n        type: 'QUIZ_RESET_NAME'\r\n    }\r\n}\r\n\r\nexport const next_question = () =>{\r\n    return {\r\n        type: 'QUIZ_NEXT_QUESTION'\r\n    }\r\n}","import React from 'react'\r\n\r\nfunction ChoiceItem({text, selected, setter_cb, right_answer, show}) {\r\n    let action_class = '';\r\n\r\n    if(show && right_answer === text){\r\n        action_class = 'quiz-choice__right';\r\n    }\r\n\r\n    if(selected && show && right_answer !== text){\r\n        action_class = 'quiz-choice__wrong';\r\n    }\r\n\r\n    return (\r\n        <div\r\n            onClick={()=> setter_cb(text)}\r\n            className={`quiz-choice ${selected ? 'quiz-choice__selected' : ''} ${action_class}`}>\r\n            <div className=\"quiz-choice-dot\"></div>\r\n        <div className=\"quiz-choice-text\">{text}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChoiceItem\r\n","export default __webpack_public_path__ + \"static/media/reset.f9da5b2b.svg\";","import React, {useState} from 'react'\r\nimport {useSelector, useDispatch } from 'react-redux'\r\nimport { add_point, reset_game, next_question } from '../../actions/quiz';\r\nimport ChoiceItem from './choiceitem'\r\nimport { Link } from 'react-router-dom'\r\nimport ResetIcon from './reset.svg'\r\n\r\n\r\n\r\nfunction Quiz() {\r\n    const dispatch = useDispatch();\r\n    const questions_re = useSelector(state => state.questions);\r\n    const quiz_re = useSelector(state => state.quiz);\r\n    let current_question = questions_re.questions[quiz_re.index];\r\n    const [submited, setSubmited] = useState(false);\r\n    const [selected, setSelected] = useState('');\r\n\r\n    const handle_button_press = () =>{\r\n        if(!submited){\r\n            setSubmited(true);\r\n            if(selected === current_question.right_answer)\r\n                dispatch(add_point());\r\n        }\r\n        else{\r\n            dispatch(next_question());\r\n            setSubmited(false);\r\n            setSelected('');\r\n        }\r\n    }\r\n\r\n    const handle_select = (e) =>{\r\n        if(!submited)\r\n            setSelected(e);\r\n    }\r\n\r\n    return (\r\n        <div className=\"game-container\">\r\n        <div className=\"navigation\"\r\n            onClick={()=> dispatch(reset_game())}\r\n        >\r\n            <img src={ResetIcon} alt=\"\" />\r\n            Újrakezdés\r\n        </div>\r\n\r\n\r\n        { quiz_re.index < questions_re.questions.length ?\r\n        <div className=\"game-content\">\r\n            <div className=\"game-state\">\r\n                {quiz_re.name} játékos pontjai: {quiz_re.points}/{questions_re.questions.length}\r\n            </div>\r\n\r\n            <h1>#{quiz_re.index + 1} {current_question.text}</h1>\r\n\r\n            <div className=\"game-actions\">\r\n                <div className=\"game-actions-choices\">\r\n                    {\r\n                        current_question.choices.map((c, i)=>(\r\n                            <ChoiceItem\r\n                                text={c}\r\n                                setter_cb={handle_select}\r\n                                selected={c === selected} \r\n                                key={i}\r\n                                right_answer={current_question.right_answer}\r\n                                show={submited}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n                <button\r\n                    className={`btn ${submited? 'btn-primary-outline': 'btn-primary'}`}\r\n                    onClick={() => handle_button_press()}\r\n                    >{submited ? \"Tovább\": \"Küldés\"}\r\n                </button>\r\n            </div>\r\n        </div>\r\n        :\r\n        <div className=\"game-result\">\r\n            <div className=\"game-result-text\">{quiz_re.name} játékos {quiz_re.points}/{questions_re.questions.length} pontot ért el!</div>\r\n            <div className=\"game-result-actions\">\r\n                <button onClick={()=> dispatch(reset_game())} className=\"btn btn-primary\">Kezdj neki egy új körnek</button>\r\n                <span>vagy</span>\r\n            <button className=\"btn btn-primary-outline\">\r\n                <Link to=\"/settings\">Hozz létre több kérdést</Link>\r\n            </button>\r\n            </div>\r\n        </div>\r\n        }\r\n        \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Quiz;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport Landing from './landing'\r\nimport Quiz from './quiz'\r\n\r\n\r\nconst Game = (props) => {\r\n\r\n    const quiz_re = useSelector(state => state.quiz);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            { quiz_re.name.trim() !== \"\" ? <Quiz /> : <Landing />}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { delete_question } from '../../actions/questions';\r\n\r\n\r\nfunction QuestionItem({id, text}) {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div className=\"question-item\">\r\n            <div className=\"question-item-text\">{text}</div>\r\n            <button \r\n                onClick={()=> dispatch(delete_question(id))}\r\n                className=\"question-item-action\">\r\n                &times;\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuestionItem\r\n","import { v4 as uuid } from 'uuid';\r\n\r\nexport const add_question = (question_object) => {\r\n    return {\r\n        type: 'ADD_QUESTION',\r\n        payload: {\r\n            ...question_object,\r\n            id: uuid()\r\n        }\r\n    }\r\n}\r\n\r\nexport const delete_question = (id)=>{\r\n    return {\r\n        type: 'DELETE_QUESTION',\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const load_questions = () =>{\r\n    return {\r\n        type: 'LOAD_QUESTIONS'\r\n    }\r\n}","import React, {useState} from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { add_question } from '../../actions/questions';\r\n\r\nfunction Form() {\r\n    const dispatch = useDispatch();\r\n    const [selected, setSelected] = useState(-1);\r\n    const [question, setQuestions] = useState('')\r\n    const [answers, setAnswers ] = useState(['', '', '', ''])\r\n\r\n    const add_new_question = () =>{\r\n        let can_dispatch = true;\r\n\r\n        if(question.trim() === \"\")\r\n            can_dispatch = false\r\n        \r\n        if(selected === -1)\r\n            can_dispatch = false\r\n\r\n        answers.forEach(a=>{\r\n            if(a.trim() === \"\")\r\n            can_dispatch = false\r\n        });\r\n        \r\n        if(can_dispatch){\r\n            const question_object = {\r\n                text: question,\r\n                choices: answers,\r\n                right_answer: answers[selected]\r\n            }\r\n            dispatch(add_question(question_object));\r\n            // Reset form\r\n            setAnswers(['', '', '', '']);\r\n            setSelected(-1);\r\n            setQuestions('');\r\n        }\r\n    }\r\n\r\n    const update_index = (i, value) =>{\r\n        const arr = answers;\r\n        arr[i] = value;\r\n        setAnswers(arr);\r\n    }\r\n\r\n    return (\r\n        <div className=\"manager-input-content\">\r\n            <div className=\"input-group\">\r\n                <label htmlFor=\"question-input\">Kérdés</label>\r\n                <input\r\n                    id=\"question-input\"\r\n                    name=\"question-input\"\r\n                    type=\"text\"\r\n                    value={question}\r\n                    onChange={e=> setQuestions(e.target.value)} />\r\n            </div>\r\n            <div className=\"manager-input-content-labels\">\r\n                <span className=\"caption-t\"><b>Válasz:</b></span>\r\n                <span className=\"caption-t\"><b>Helyes ?</b></span>\r\n            </div>\r\n            <div className=\"choices\">\r\n                {\r\n                    answers.map((a,i)=>(\r\n                    <div className=\"choice-input\" key={i}>\r\n                        <input type=\"text\" \r\n                            onChange={e=> update_index(i, e.target.value)}/>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={selected === i} \r\n                            value={a}\r\n                            onChange={()=> setSelected(i)}/>\r\n                    </div>\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                onClick={()=> add_new_question()}>\r\n                    Kérdés hozzáadása\r\n                </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport QuestionItem from './questionitem'\r\nimport Form from './form'\r\n\r\nconst QuestionManager = (props) => {\r\n    const questions_re = useSelector(state => state.questions);\r\n    const is_empty = questions_re.questions.length === 0;\r\n    return (\r\n        <div className=\"manager-container\">\r\n            <div className=\"navigation\">\r\n                <Link to=\"/\">\r\n                    &lArr;\r\n                    Vissza a játékhoz\r\n            </Link>\r\n            </div>\r\n            <div className={`manager-questions ${is_empty? 'empty': ''}`}>\r\n                {is_empty?\r\n                <h1>Jelenleg nincsenek kérdések.</h1>\r\n                :\r\n                questions_re.questions.map(q=>(\r\n                    <QuestionItem text={q.text} id={q.id} key={q.id}/>\r\n                ))}\r\n\r\n            </div>\r\n            <div className=\"manager-input\">\r\n                <Form />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default QuestionManager;","import Game from './screens/game';\nimport QuestionManager from './screens/questionmanager';\nimport {useEffect} from 'react';\nimport { useDispatch } from 'react-redux'\nimport {load_questions} from './actions/questions';\nimport './main.css'\n\n\nimport { Redirect, Switch, Route, BrowserRouter as Router } from 'react-router-dom'\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(()=>{\n    dispatch(load_questions());\n  }, [dispatch]);\n  \n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Game} />\n        <Route path=\"/settings\" exact component={QuestionManager} />\n        <Route path=\"/*\" render={() => (<Redirect to=\"/\" />)} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    name: '',\r\n    points: 0,\r\n    index: 0\r\n};\r\n\r\nconst quizReducer = (state = initialState, action)=>{\r\n    switch(action.type){\r\n        case 'QUIZ_ADD_POINT':\r\n            return {\r\n                ...state,\r\n                points: state.points + 1\r\n            }\r\n\r\n        case 'QUIZ_SET_NAME':\r\n            return {\r\n                ...state,\r\n                name: action.payload\r\n            }\r\n\r\n        case 'QUIZ_RESET_NAME':\r\n            return {\r\n                name: '',\r\n                points: 0,\r\n                index:0\r\n            }\r\n\r\n        case 'QUIZ_NEXT_QUESTION':\r\n            return {\r\n                ...state,\r\n                index: state.index + 1\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default quizReducer;","const initial_state = {\r\n    loading: true,\r\n    questions: []\r\n}\r\n\r\nconst load_questions_from_localstorage = () => {\r\n    let result = localStorage.getItem('questions');\r\n    if(result !==null)\r\n        return JSON.parse(result);\r\n    else\r\n        return [];\r\n}\r\n\r\nconst save_questions_to_localstorage = (questions_array) => {\r\n    let string = JSON.stringify(questions_array);\r\n    localStorage.setItem('questions', string);\r\n}\r\n\r\nconst questionsReducer = (state = initial_state, action) => {\r\n    let new_questions;\r\n    switch (action.type) {\r\n        case 'ADD_QUESTION':\r\n            new_questions = [action.payload, ...state.questions];\r\n            save_questions_to_localstorage(new_questions);\r\n            return {\r\n                ...state,\r\n                questions: new_questions\r\n            }\r\n        case 'DELETE_QUESTION':\r\n            new_questions = [...state.questions.filter(q => q.id !== action.payload)];\r\n            save_questions_to_localstorage(new_questions);\r\n            return {\r\n                ...state,\r\n                questions: new_questions\r\n            }\r\n\r\n        case 'LOAD_QUESTIONS':\r\n            return {\r\n                loading: false,\r\n                questions: load_questions_from_localstorage()\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default questionsReducer;","import quizReducer from './reducers/quiz'\r\nimport questionsReducer from './reducers/questions'\r\nimport { createStore, combineReducers } from 'redux'\r\nimport { Provider } from 'react-redux'\r\n\r\nconst allReducers = combineReducers({\r\n    questions: questionsReducer,\r\n    quiz: quizReducer\r\n});\r\n\r\nconst store = createStore(allReducers);\r\n\r\nconst ReduxProvider = (props) => <Provider store={store}>{props.children}</Provider>\r\n\r\nexport default ReduxProvider;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ReduxProvider from './store';\n\nReactDOM.render(\n  <ReduxProvider>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ReduxProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}